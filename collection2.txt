package nmam;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Scanner;
import java.util.Stack;

public class Test1  implements Comparator<Integer> { 
	 public static void main(String []args) {
ArrayList<Integer> a= new ArrayList<>();
  	 a.add(125);
  	 a.add(312);
  	 a.add(231);

Comparator<Integer>  c1= new Test1();
Collections.sort(a,c1);
  	 System.out.println(a);		 
	}

	@Override
	public int compare(Integer o1, Integer o2) {
		 System.out.println("hai");
		return o1%10>o2%10?7676767:-3;
	}

	  
	 }
package nmam;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Scanner;
import java.util.Stack;

public class Test1  implements Comparator<Integer> { 
	 public static void main(String []args) {
ArrayList<Integer> a= new ArrayList<>();
  	 a.add(125);
  	 a.add(312);
  	 a.add(231);
  	 
  	 Comparator<Integer> c1 = new Test1();
a.sort(c1);
 
  	 System.out.println(a);		 
	}

	@Override
	public int compare(Integer o1, Integer o2) {
		System.out.println("hai");
	 return o1%100>o2%100?1:-1;
	}

	

	 

	  
	 }
package nmam;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Scanner;
import java.util.Stack;

public class Test1  implements Comparator<String> { 
	 public static void main(String []args) {
ArrayList<String> a= new ArrayList<>();
  	 a.add("hai");
  	 a.add("anil");
  	 a.add("priya");
  	 
  	 Comparator<String> c1 = new Test1();
 a.sort(c1);
  	 System.out.println(a);		 
	}

	@Override
	public int compare(String o1, String o2) {
		 System.out.println("hai");
	 return o1.compareTo(o2);
	}

	

	 

	  
	 }
package nmam;
interface Animal{
	
	void makeSound();
	default void disp()
	{
		System.out.println("hello");
	}
}
class Dog implements Animal{

	@Override
	public void makeSound() {
		System.out.println("wowwow");
	}
	
}
public class Check {

	public static void main(String[] args) { 
Animal a= new Dog();
a.makeSound();
	}

}
package nmam;
interface Animal{
	
	void makeSound();
	default void disp()
	{
		System.out.println("hello");
	}
}
//class Dog implements Animal{
//
//	@Override
//	public void makeSound() {
//		System.out.println("wowwow");
//	}
//	
//}
public class Check {

	public static void main(String[] args) { 
Animal a= new Animal() {

	@Override
	public void makeSound() {
		System.out.println("wowwow");
	}
	
};
a.makeSound();
a.disp();
	}

}
package nmam;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Scanner;
import java.util.Stack;

public class Test1   { 
	
	 public static void main(String []args) {
		 ArrayList<Integer> a= new ArrayList<>();
 
  	  a.add(12);
  	  a.add(34);
  	  a.add(66);
  	 
  	  Comparator<Integer> c1 = new Comparator<Integer>() {

		@Override
		public int compare(Integer o1, Integer o2) {
			System.out.println("ahi");
			return o1>o2?1:-1;
		}
  		  
	};

	 
  	 Collections.sort(a,c1);
  	 System.out.println(a);		 
  	 
	}

	 
	 

	 

	

	 

	  
	 }
package nmam;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

class Product implements Comparator<Product>{
	int price;
	int qty;
	String name;
	public Product() {
		// TODO Auto-generated constructor stub
	}
	public Product(int price, int qty, String name) {
		super();
		this.price = price;
		this.qty = qty;
		this.name = name;
	}
	
	public String toString() {
		return price+" "+qty+" "+name;
	}

	@Override
	public int compare(Product o1, Product o2) {
		 System.out.println("hi............");
		return o1.name.compareTo(o2.name);
	}
}
 

public class Test1   { 
	
	 public static void main(String []args) {
Product p1 = new Product(1000, 20, "mobile");
Product p2 = new Product(674, 20, "watch");
Product p3 = new Productâ€¦
package nmam;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

class Product  {
	int price;
	int qty;
	String name;
	public Product() {
		// TODO Auto-generated constructor stub
	}
	public Product(int price, int qty, String name) {
		super();
		this.price = price;
		this.qty = qty;
		this.name = name;
	}
	
	public String toString() {
		return price+" "+qty+" "+name;
	}

	
	
}
 
 